(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{423:function(t,s,a){"use strict";a.r(s);var e=a(10),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"设备各类标识算法-app-端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设备各类标识算法-app-端"}},[t._v("#")]),t._v(" 设备各类标识算法(APP 端)")]),t._v(" "),s("h2",{attrs:{id:"设备唯一标识-buvid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设备唯一标识-buvid"}},[t._v("#")]),t._v(" 设备唯一标识 BUVID")]),t._v(" "),s("p",[t._v("注意区分于 Web 端的 buvid3, buvid4.")]),t._v(" "),s("p",[t._v("BUVID 在 APP 首次安装于某设备, 且首次启动时生成.")]),t._v(" "),s("p",[t._v("APP 首次(即每次安装后)启动, 会向云端发送本机各类设备特征, 含 "),s("code",[t._v("AndroidId")]),t._v(", "),s("code",[t._v("DrmId")]),t._v(" 等, 请求是否有匹配的 BUVID, 有就使用云端的, 否则使用本地生成的.")]),t._v(" "),s("p",[t._v("APP 请求是否有匹配的 BUVID 发送的本机各类设备特征包括(但不限于):")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("AndroidID")])]),t._v(" "),s("li",[s("code",[t._v("DrmId")])]),t._v(" "),s("li",[s("code",[t._v("IMEI")])]),t._v(" "),s("li",[s("code",[t._v("OAID")])]),t._v(" "),s("li",[t._v("手机网卡 "),s("code",[t._v("MAC")])]),t._v(" "),s("li",[t._v("设备品牌")]),t._v(" "),s("li",[t._v("设备 Model")]),t._v(" "),s("li",[t._v("本地生成的 BUVID")])]),t._v(" "),s("h3",{attrs:{id:"生成方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成方法"}},[t._v("#")]),t._v(" 生成方法")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("选定设备特征码, 可以是 "),s("code",[t._v("AndroidID")]),t._v(", "),s("code",[t._v("DrmId")]),t._v(", 手机网卡 "),s("code",[t._v("MAC")]),t._v(" 等. 记为 "),s("code",[t._v("ID")]),t._v(". 特别地, "),s("code",[t._v("MAC")]),t._v(" 应当去掉 "),s("code",[t._v(":")]),t._v(", "),s("code",[t._v("GUID")]),t._v("(即 UUID) 应当去掉 "),s("code",[t._v("-")]),t._v(".")])]),t._v(" "),s("li",[s("p",[t._v("计算 "),s("code",[t._v("ID")]),t._v(" 的 MD5. 记为 "),s("code",[t._v("ID_MD5")]),t._v(".")])]),t._v(" "),s("li",[s("p",[t._v("从 "),s("code",[t._v("ID_MD5")]),t._v(" 抽取第 3, 13, 23 位, 失败就默认为 000, 记为 "),s("code",[t._v("ID_E")]),t._v(".")])]),t._v(" "),s("li",[s("p",[t._v("根据选定的设备特征码类型确定 BUVID Prefix, 见附录. 记为 "),s("code",[t._v("BUVID_Prefix")]),t._v(".")])]),t._v(" "),s("li",[s("p",[t._v("按 "),s("code",[t._v("{BUVID_Prefix}{ID_E}{ID_MD5}")]),t._v(" 的顺序连接起来, 共37位(2+3+32). 结果应当为大写.")])])]),t._v(" "),s("h3",{attrs:{id:"demo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[t._v("#")]),t._v(" Demo")]),t._v(" "),s("h4",{attrs:{id:"rust"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rust"}},[t._v("#")]),t._v(" Rust")]),t._v(" "),s("p",[t._v("代码及测试样例见 "),s("a",{attrs:{href:"https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=40b5906cf3838a60efa83fa368b15147",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust Playground"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"设备指纹-fp-fp-local-fp-remote"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设备指纹-fp-fp-local-fp-remote"}},[t._v("#")]),t._v(" 设备指纹 fp (fp_local, fp_remote)")]),t._v(" "),s("p",[t._v("用于请求账户相关 REST API, 及 gRPC Metadata 生成.")]),t._v(" "),s("p",[t._v("在请求头中, "),s("code",[t._v("fp_local")]),t._v(" 和 "),s("code",[t._v("fp_remote")]),t._v(" 设置为同一值即可, 暂不清楚区别.")]),t._v(" "),s("h3",{attrs:{id:"生成方法-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成方法-2"}},[t._v("#")]),t._v(" 生成方法")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("获取 BUVID. 此处一般使用 XU Prefix 的 BUVID.")])]),t._v(" "),s("li",[s("p",[t._v("获取设备 Model("),s("code",[t._v("Build.MODEL")]),t._v("), 如 "),s("code",[t._v("NOH-AN01")]),t._v(".")])]),t._v(" "),s("li",[s("p",[t._v("获取手机无线电固件版本号("),s("code",[t._v("Build.getRadioVersion()")]),t._v("), 失败则留空. 如 "),s("code",[t._v("21C20B686S000C000,21C20B686S000C000")]),t._v(".")])]),t._v(" "),s("li",[s("p",[t._v("按前述顺序拼接字符串, 计算得 MD5.")])]),t._v(" "),s("li",[s("p",[t._v("获取年月日, 格式 "),s("code",[t._v("yyyyMMddhhmmss")]),t._v(", 拼接到 4 得到的字符串后.")])]),t._v(" "),s("li",[s("p",[t._v("生成 16 位随机字符串, CharSet 为 "),s("code",[t._v("0123456789abcdef")]),t._v(", 拼接到 5 得到的字符串后, 记为 "),s("code",[t._v("fp_raw")]),t._v(".")])]),t._v(" "),s("li",[s("p",[t._v("计算得到一个特殊字符串, 拼接到 "),s("code",[t._v("fp_raw")]),t._v(" 后, 即得到最终的 "),s("code",[t._v("fp")]),t._v(", 特殊字符串算法见下:")])])]),t._v(" "),s("div",{staticClass:"language-rust line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" veri_code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有点像 HEX 的操作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fp_raw_sub_str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fp_raw\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("as_bytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将字符串 fp_raw 转换为字节数组")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chunks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 按每两个字节一组进行切分")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token closure-params"}},[s("span",{pre:!0,attrs:{class:"token closure-punctuation punctuation"}},[t._v("|")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token closure-punctuation punctuation"}},[t._v("|")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsafe")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from_utf8_unchecked")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对每一组解析作为 UTF-8 字符串")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("collect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vec")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将结果收集到 Vec 中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 fp_raw 的长度小于 62, 则向下取偶数减半作为循环终止条件, 否则终止条件为31")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" fp_raw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("62")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        fp_raw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" fp_raw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取偶数")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("62")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将每组字符串转换为对应的 16 进制整数, 将转换得到的整数加到 veri_code 上. ")]),t._v("\n    veri_code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("i32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from_str_radix")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fp_raw_sub_str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unwrap_or")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后将 veri_code 对 256 取余, 格式化为两位的 16 进制字符串")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" veri_code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("format!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{:0>2x}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" veri_code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br")])]),s("h3",{attrs:{id:"demo-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#demo-2"}},[t._v("#")]),t._v(" Demo")]),t._v(" "),s("h4",{attrs:{id:"rust-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rust-2"}},[t._v("#")]),t._v(" Rust")]),t._v(" "),s("p",[t._v("代码及测试样例见 "),s("a",{attrs:{href:"https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=40b5906cf3838a60efa83fa368b15147",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust Playground"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"附录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[t._v("#")]),t._v(" 附录")]),t._v(" "),s("h3",{attrs:{id:"buvid-prefix"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#buvid-prefix"}},[t._v("#")]),t._v(" BUVID Prefix")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("设备特征码")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("BUVID Prefix")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("备注")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("AndroidID")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("XX")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("DrmId")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("XU")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("IMEI")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("XZ")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("已弃用")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("GUID")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("XW")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("已弃用")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("MAC")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("XY")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("GoogleId")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("XG")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("东南亚版本")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("FacebookId")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("XF")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("东南亚版本")])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);